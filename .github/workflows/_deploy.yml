name: Deploy

on:
  workflow_call:
    secrets:
      DEPLOYMENTS_SSH_USER: { required: true }
      DEPLOYMENTS_SSH_PRIVATE_KEY: { required: true }
      DEPLOYMENTS_SSH_HOST_DEVELOPMENT: { required: true }
      DEPLOYMENTS_SSH_HOST_TESTING: { required: true }
      DEPLOYMENTS_SSH_HOST_STAGING: { required: true }
      DEB_AWS_ACCESS_KEY_ID: { required: true }
      DEB_AWS_SECRET_ACCESS_KEY: { required: true }
      REPO_SIGNING_KEY: { required: true }
      REPO_SIGNING_KEY_PASSPHRASE: { required: true }
      DELIVERY_BOT_APP_PEM: { required: false }

    inputs:
      triggered-branch:
        type: string
        required: false
        default: ${{ github.ref_name }}

      tag:
        type: string
        required: false
        description: Package version to create tag.

      tag-target-commitish:
        type: string
        required: false
        default: ${{ github.sha }}

      repository-environment:
        type: string
        required: false
        default: acceptance
        description: Linked environment for upload build to repository (eg. acceptance, v25.04-releases, ...).

      deb-package-pattern:
        type: string
        required: true
        description: A path pattern to artifact, that should be uploaded to environments and installed.

      deb-component:
        type: string
        required: false
        default: dev
        description: Component of the APT repository.

      deb-codename:
        type: string
        required: true
        description: Nickname used for specific Debian releases.

      deb-aws-bucket-name:
        type: string
        required: true

      deb-aws-bucket-region:
        type: string
        required: true

      github-app-id:
        type: string
        required: false
        description: |
          Numeric ID of the GitHub App used to generate the installation token.
          This is required when downloading artifacts from a different repository or from a different workflow run

      artifact-repository-owner:
        type: string
        required: false
        default: ${{ github.repository_owner }}
        description: The owner of the GitHub App installation (defaults to current repository owner)

      artifact-repository:
        type: string
        required: false
        description: The repository name joined that artifacts will be downloaded from

      artifact-actions-run-id:
        type: string
        required: false
        description: |
          The id of the workflow run where the desired download artifact was uploaded from.
          If artifact-github-token is specified, this is the run that artifacts will be downloaded from.

jobs:
  development:
    name: Development
    runs-on: [ arc-runner-set ]
    if: inputs.repository-environment == 'acceptance'
    environment: development
    steps:
      - name: Deploy
        uses: webitel/reusable-workflows/actions/deploy@deploy-v1.0.1
        with:
          source: ${{ inputs.deb-package-pattern }}
          host: ${{ secrets.DEPLOYMENTS_SSH_HOST_DEVELOPMENT }}
          user: ${{ secrets.DEPLOYMENTS_SSH_USER }}
          private-key: ${{ secrets.DEPLOYMENTS_SSH_PRIVATE_KEY }}
          github-app-id: ${{ inputs.github-app-id }}
          github-app-private-key: ${{ secrets.DELIVERY_BOT_APP_PEM }}
          artifact-repository: ${{ inputs.artifact-repository }}
          artifact-repository-owner: ${{ inputs.artifact-repository-owner }}
          artifact-actions-run-id: ${{ inputs.artifact-actions-run-id }}

  testing:
    name: Testing
    runs-on: [ arc-runner-set ]
    needs: [ development ]
    if: inputs.repository-environment == 'acceptance'
    environment: testing
    steps:
      - name: Deploy
        uses: webitel/reusable-workflows/actions/deploy@deploy-v1.0.1
        with:
          source: ${{ inputs.deb-package-pattern }}
          host: ${{ secrets.DEPLOYMENTS_SSH_HOST_TESTING }}
          user: ${{ secrets.DEPLOYMENTS_SSH_USER }}
          private-key: ${{ secrets.DEPLOYMENTS_SSH_PRIVATE_KEY }}
          github-app-id: ${{ inputs.github-app-id }}
          github-app-private-key: ${{ secrets.DELIVERY_BOT_APP_PEM }}
          artifact-repository: ${{ inputs.artifact-repository }}
          artifact-repository-owner: ${{ inputs.artifact-repository-owner }}
          artifact-actions-run-id: ${{ inputs.artifact-actions-run-id }}

  check-latest:
    name: Check latest release
    runs-on: [ arc-runner-set ]
    if: inputs.repository-environment != 'acceptance'
    outputs:
      version: ${{ steps.check.outputs.version }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0 # Fetch all history so we can list branches

      - name: For each git ref
        id: check
        uses: webitel/reusable-workflows/actions/check-latest@check-latest-v1.0.1

  staging:
    name: Staging
    needs: [ check-latest ]
    if: inputs.repository-environment != 'acceptance' && needs.check-latest.outputs.version == inputs.triggered-branch
    runs-on: [ arc-runner-set ]
    environment: staging
    steps:
      - name: Deploy
        uses: webitel/reusable-workflows/actions/deploy@deploy-v1.0.1
        with:
          source: ${{ inputs.deb-package-pattern }}
          host: ${{ secrets.DEPLOYMENTS_SSH_HOST_STAGING }}
          user: ${{ secrets.DEPLOYMENTS_SSH_USER }}
          private-key: ${{ secrets.DEPLOYMENTS_SSH_PRIVATE_KEY }}
          github-app-id: ${{ inputs.github-app-id }}
          github-app-private-key: ${{ secrets.DELIVERY_BOT_APP_PEM }}
          artifact-repository: ${{ inputs.artifact-repository }}
          artifact-repository-owner: ${{ inputs.artifact-repository-owner }}
          artifact-actions-run-id: ${{ inputs.artifact-actions-run-id }}

  repository:
    name: Publish .deb package
    needs: [ testing, check-latest, staging ]
    uses: webitel/reusable-workflows/.github/workflows/_publish-deb.yml@v1.0.5

    # Run even if previous jobs fail or are canceled, but
    # do not run if the workflow was canceled.
    # Case 1: Development deployment (acceptance environment)
    # Case 2: Latest release deployment (non-acceptance environment)
    # Case 3: Other release deployment (non-acceptance environment and not the latest release)
    if: |
      always() && !cancelled() &&
      ((inputs.repository-environment == 'acceptance' && needs.testing.result == 'success') ||
        (inputs.repository-environment != 'acceptance' && needs.check-latest.outputs.version == inputs.triggered-branch && needs.staging.result == 'success') ||
        (inputs.repository-environment != 'acceptance' && needs.check-latest.outputs.version != inputs.triggered-branch))

    secrets:
      DEB_AWS_ACCESS_KEY_ID: ${{ secrets.DEB_AWS_ACCESS_KEY_ID }}
      DEB_AWS_SECRET_ACCESS_KEY: ${{ secrets.DEB_AWS_SECRET_ACCESS_KEY }}
      REPO_SIGNING_KEY: ${{ secrets.REPO_SIGNING_KEY }}
      REPO_SIGNING_KEY_PASSPHRASE: ${{ secrets.REPO_SIGNING_KEY_PASSPHRASE }}
      DELIVERY_BOT_APP_PEM: ${{ secrets.DELIVERY_BOT_APP_PEM }}

    with:
      repository-environment: ${{ inputs.repository-environment }}
      deb-package-pattern: ${{ inputs.deb-package-pattern }}
      deb-component: ${{ inputs.component }}
      deb-codename: ${{ inputs.deb-codename }}
      deb-aws-bucket-name: ${{ inputs.deb-aws-bucket-name }}
      deb-aws-bucket-region: ${{ inputs.deb-aws-bucket-region }}
      github-app-id: ${{ inputs.github-app-id }}
      artifact-repository: ${{ inputs.artifact-repository }}
      artifact-repository-owner: ${{ inputs.artifact-repository-owner }}
      artifact-actions-run-id: ${{ inputs.artifact-actions-run-id }}

  release:
    name: Release assets
    needs: [ check-latest, staging ]
    runs-on: [ arc-runner-set ]
    if: |
      always() && !cancelled() && inputs.repository-environment != 'acceptance' && inputs.tag != '' &&
      ((inputs.repository-environment != 'acceptance' && needs.check-latest.outputs.version == inputs.triggered-branch && needs.staging.result == 'success') ||
        (inputs.repository-environment != 'acceptance' && needs.check-latest.outputs.version != inputs.triggered-branch))

    permissions: { contents: write }
    steps:
      - name: Create Github APP token
        uses: webitel/reusable-workflows/actions/create-github-app-token@create-github-app-token-v1.0.1
        id: app-token
        if: inputs.artifact-repository != ''
        with:
          app-id: ${{ inputs.github-app-id }}
          private-key: ${{ secrets.DELIVERY_BOT_APP_PEM }}
          owner: ${{ inputs.artifact-repository-owner }}
          repositories: ${{ inputs.artifact-repository }}

      - name: Download package
        uses: actions/download-artifact@v4
        with:
          name: build-packages
          path: dist
          repository: ${{ inputs.artifact-repository != '' && format('{0}/{1}', inputs.artifact-repository-owner, inputs.artifact-repository) || '' }}
          run-id: ${{ inputs.artifact-actions-run-id }}
          github-token: ${{ steps.app-token.outputs.token }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ inputs.tag }}
          tag_name: ${{ inputs.tag }}
          target_commitish: ${{ inputs.tag-target-commitish }}
          make_latest: ${{ needs.check-latest.outputs.version == inputs.triggered-branch }}
          generate_release_notes: true
          draft: false
          files: dist/*