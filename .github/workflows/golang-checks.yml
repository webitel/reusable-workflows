name: Checks

on:
  workflow_call:
    inputs:
      generated-code:
        type: string
        required: false
        default: false
        description: Download generated code

jobs:
  lint:
    name: Lint code
    runs-on: [ arc-backend-runner-set ]
    continue-on-error: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 2

      - name: Download generated code
        if: inputs.generated-code == 'true'
        uses: actions/download-artifact@v4
        with:
          name: generated-code

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v8.0.0
        with:
          install-mode: none
          problem-matchers: true
          skip-cache: true

  govulncheck:
    name: Vulnerabilities
    runs-on: [ arc-backend-runner-set ]
    permissions:
      security-events: write

      # only required for workflows in private repositories
      actions: read
      contents: read

    continue-on-error: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 2

      - name: Download generated code
        if: inputs.generated-code == 'true'
        uses: actions/download-artifact@v4
        with:
          name: generated-code

      - name: Install govulncheck
        run: go install golang.org/x/vuln/cmd/govulncheck@latest

      - name: Run govulncheck and save to file
        run: govulncheck -C . -format sarif ./... > report.sarif

      - name: Upload to code-scanning
        uses: github/codeql-action/upload-sarif@28deaeda66b76a05916b6923827895f2b14ab387 # v3.28.16
        with:
          sarif_file: report.sarif

  test:
    name: Unit testing
    runs-on: [ arc-backend-runner-set ]
    continue-on-error: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 2

      - name: Download generated code
        if: inputs.generated-code == 'true'
        uses: actions/download-artifact@v4
        with:
          name: generated-code

      - name: Run all tests
        run: go test -short -v ./... | go run github.com/jstemmer/go-junit-report@latest -set-exit-code > report.xml

      - name: Test Summary
        if: always()
        uses: test-summary/action@v2.4
        with:
          paths: report.xml

  analyze:
    name: CodeQL analyze (${{ matrix.language }})
    runs-on: [ arc-backend-runner-set ]
    if: ! github.event.repository.private
    permissions:
      security-events: write

    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        include:
          - language: actions
            build-mode: none
          - language: go
            build-mode: autobuild

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 2

      - name: Download generated code
        if: inputs.generated-code == 'true'
        uses: actions/download-artifact@v4
        with:
          name: generated-code

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          build-mode: ${{ matrix.build-mode }}
          # If you wish to specify custom queries, you can do so here or in a config file.
          # By default, queries listed here will override any specified in a config file.
          # Prefix the list here with "+" to use these queries and those in the config file.
          # queries: ./path/to/local/query, your-org/your-repo/queries@main

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"