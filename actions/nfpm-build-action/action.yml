name: nFPM Action
description: Generate nfpm config from inputs and build packages
author: Webitel

branding:
  icon: package
  color: blue

inputs:
  nfpm-version:
    required: false
    default: ''
    description: |
      nFPM version to install (e.g., 2.35.3). 
      Leave empty to use pre-installed or skip installation

  skip-install:
    required: false
    default: "false"
    description: Skip nFPM installation

  config-file:
    required: false
    default: .nfpm.yaml
    description: Path to save the generated nFPM config file

  package-name:
    required: true
    description: Package name

  package-description:
    required: false
    default: no description given
    description: |
      Most packagers call for a one-line synopsis of the package. Some (like deb)
      also call for a multi-line description starting on the second line.

  arch:
    required: false
    default: amd64
    description: |
      The architecture is specified using Go nomenclature (GOARCH) and translated
      to the platform specific equivalent. In order to manually set the architecture
      to a platform specific value, set `{format}.arch`.
      Examples: `all`, `amd64`, `386`, `arm5`, `arm6`, `arm7`, `arm64`, `mips`, `mipsle`, `mips64le`, `ppc64le`, `s390`

  platform:
    required: false
    default: linux
    description: |
      This is only used by the rpm and deb packagers.
      Examples: `linux` (default), `darwin`

  version:
    required: true
    description: |
      Some package managers, like deb, require the version to start with a digit.
      Hence, you should not prefix the version with 'v'.

  release:
    required: false
    default: "1"
    description: |
      This is appended to the `version` after `prerelease`. This should be
      incremented if you release an updated package of the same upstream version,
      and it should reset to 1 when bumping the version.

  prerelease:
    required: false
    description: |
      Version Prerelease.
      This is appended to the `version`, e.g. `1.2.3+beta1`

  version-metadata:
    required: false
    description: Version Metadata (previously deb.metadata).

  section:
    required: false
    default: default
    description: |
      This is only used by the deb packager.
      See: https://www.debian.org/doc/debian-policy/ch-archive.html#sections

  priority:
    required: false
    default: optional
    description: |
      Defaults to `optional` on deb.
      Defaults to empty on rpm and apk.
      See: https://www.debian.org/doc/debian-policy/ch-archive.html#priorities

  maintainer:
    required: true
    description: |
      This will expand any env var you set in the field, e.g. maintainer: ${GIT_COMMITTER_NAME} <${GIT_COMMITTER_EMAIL}>.
      Defaults to empty on rpm and apk.
      Leaving the 'maintainer' field unset will not be allowed in a future version.

  vendor:
    required: false
    description: Package vendor. This is only used by the rpm packager.

  homepage:
    required: false
    description: Package homepage

  license:
    required: false
    default: MIT
    description: Package license

  contents:
    required: false
    description: |
      Contents to add to the package.
      This can be binaries or any other files.
      Example: 
      ```
        contents: |
          src=path dst=/path type=file|config|dir
          src=./config.conf dst=/etc/app/config.conf type=config mode=0644 owner=app group=app
      
        contents: |
          - src: ./app
            dst: /usr/bin/app
            type: file
            mode: 0755
          
          - src: ./config.conf
            dst: /etc/app/config.conf
            type: config
            file_info:
              mode: 0644
              owner: app
              group: app
      ```

  scripts:
    required: false
    description: |
      Scripts to run at specific stages.
      Example: 
      ```
        preinstall: ./scripts/preinstall.sh
        postinstall: ./scripts/postinstall.sh
        preremove: ./scripts/preremove.sh
        postremove: ./scripts/postremove.sh
      ```

  depends:
    required: false
    description: Package dependencies (comma-separated)

  recommends:
    required: false
    description: Recommended packages (comma-separated)

  suggests:
    required: false
    description: Suggested packages (comma-separated).

  conflicts:
    required: false
    description: Packages it conflicts with (comma-separated).

  replaces:
    required: false
    description: Packages it replaces (comma-separated)

  provides:
    required: false
    description: Packages it provides. (comma-separated)

  formats:
    required: false
    default: deb
    description: |
      Packager implementation to use (comma-separated, e.g., apk, archlinux, deb, ipk, rpm)

  target:
    required: false
    default: dist
    description: |
      Path to save the generated package (filename, folder or empty for current folder)

outputs:
  packages:
    description: List of generated package files

  config-file:
    description: Path to the generated nFPM config file

runs:
  using: node20
  main: dist/index.js