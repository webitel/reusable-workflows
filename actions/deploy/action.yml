name: Deploy to Remote Host
description: Copies and installs build artifact on a remote host, then restarts the specified service.

inputs:
  source:
    required: true
    description: Build artifact (e.g., .deb package)

  service:
    required: false
    description: Systemd service to restart

  host:
    required: true
    description: Remote host (IP or domain)

  user:
    required: true
    description: SSH username

  private-key:
    required: true
    description: Private SSH key for authentication

  github-app-id:
    required: false
    description: |
      Numeric ID of the GitHub App used to generate the installation token.
      This is required when downloading artifacts from a different repository or from a different workflow run

  github-app-private-key:
    required: false
    description: |
      PEM-encoded private key for the GitHub App.
      This is required when downloading artifacts from a different repository or from a different workflow run

  artifact-repository-owner:
    required: false
    default: ${{ github.repository_owner }}
    description: The owner of the GitHub App installation (defaults to current repository owner)

  artifact-repository:
    required: false
    description: The repository name joined that artifacts will be downloaded from

  artifact-actions-run-id:
    required: false
    description: |
      The id of the workflow run where the desired download artifact was uploaded from

runs:
  using: composite
  steps:
    - name: Create Github APP token
      uses: webitel/reusable-workflows/actions/create-github-app-token@create-github-app-token-v1.0.1
      id: app-token
      if: inputs.artifact-repository != ''
      with:
        app-id: ${{ inputs.github-app-id }}
        private-key: ${{ inputs.github-app-private-key }}
        owner: ${{ inputs.artifact-repository-owner }}
        repositories: ${{ inputs.artifact-repository }}

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-packages
        repository: ${{ inputs.artifact-repository != '' && format('{0}/{1}', inputs.artifact-repository-owner, inputs.artifact-repository) || '' }}
        run-id: ${{ inputs.artifact-actions-run-id }}
        github-token: ${{ steps.app-token.outputs.token }}

    - name: Copy build to remote host
      uses: appleboy/scp-action@v1.0.0
      with:
        host: ${{ inputs.host }}
        username: ${{ inputs.user }}
        key: ${{ inputs.private-key }}
        source: ${{ inputs.source }}
        target: ~/dist

    - name: Install package
      uses: appleboy/ssh-action@v1.2.2
      with:
        host: ${{ inputs.host }}
        username: ${{ inputs.user }}
        key: ${{ inputs.private-key }}
        script: |
          sudo DEBIAN_FRONTEND=noninteractive dpkg --install --force-confold ~/dist/${{ inputs.source }}
          rm ~/dist/${{ inputs.source }}
