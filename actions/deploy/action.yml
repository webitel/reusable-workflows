name: Deploy to Remote Host
description: Copies and installs build artifact on a remote host, then restarts the specified service.

inputs:
  source:
    required: true
    description: Build artifact (e.g., .deb package)

  service:
    required: false
    description: Systemd service to restart

  host:
    required: true
    description: Remote host (IP or domain)

  user:
    required: true
    description: SSH username

  private-key:
    required: true
    description: Private SSH key for authentication

  artifact-repository:
    required: false
    description: |
      The repository owner and the repository name joined together by "/".
      If artifact-github-token is specified, this is the repository that artifacts will be downloaded from.

  artifact-actions-run-id:
    required: false
    description: |
      The id of the workflow run where the desired download artifact was uploaded from.
      If artifact-github-token is specified, this is the run that artifacts will be downloaded from.

  artifact-github-token:
    required: false
    description: |
      The GitHub token used to authenticate with the GitHub API.
      This is required when downloading artifacts from a different repository or from a different workflow run.

runs:
  using: composite
  steps:
    - name: Checkout repository
      uses: actions/checkout@v5
      with:
        fetch-depth: 2

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-packages
        repository: ${{ inputs.artifact-repository }}
        run-id: ${{ inputs.artifact-actions-run-id }}
        github-token: ${{ inputs.artifact-github-token }}

    - name: Copy build to remote host
      uses: appleboy/scp-action@v1.0.0
      with:
        host: ${{ inputs.host }}
        username: ${{ inputs.user }}
        key: ${{ inputs.private-key }}
        source: ${{ inputs.source }}
        target: ~/dist

    - name: Install package
      uses: appleboy/ssh-action@v1.2.2
      with:
        host: ${{ inputs.host }}
        username: ${{ inputs.user }}
        key: ${{ inputs.private-key }}
        script: |
          sudo DEBIAN_FRONTEND=noninteractive dpkg --install --force-confold ~/dist/${{ inputs.source }}
          rm ~/dist/${{ inputs.source }}
